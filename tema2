import queue

def citire():
    global n, S, m, alph, index, q0, k, F, l, delta
    f = open("input.in")
    n = int(f.readline())
    S = [int(i) for i in range(n)]
    m = int(f.readline())
    alph = [x for x in f.readline().split()]
    alph.append('$')
    index = {}
    for q in range(len(alph)):
        index[alph[q]] = q
    # print (d)

    q0 = int(f.readline())
    k = int(f.readline())
    F = [int(x) for x in f.readline().split()]
    l = int(f.readline())
    delta = {i: {x: [] for x in alph} for i in range(n)}
    # print(delta)
    for x in range(l):
        x, st, y = f.readline().split()
        if delta[int(x)][st] == [-1]:
            delta[int(x)][st] = [int(y)]
        else:
            delta[int(x)][st].append((int(y)))
    # print (delta)

def verifica_ENFA(automata, word):
    if len(word) != 0:
        if delta[automata]['$'] != [-1]:
            for stare in delta[automata]['$']:
                ENFA(stare, word)
        if delta[automata][word[0]] == [-1]:
            sol.append(False)
        else:
            automata = delta[automata][word[0]]
            for stare in automata:
                ENFA(stare, word[1:])
    else:
        if automata in F:
            sol.append(True)
        else:
            sol.append(False)

def verifica_DFA(word):
    global delta, q0
    curentstate = q0
    for x in word:
        if delta[curentstate][index[x]] != -1:
            curentstate = delta[curentstate][index[x]]
        else:
            return False
    if curentstate in F:
        return True
    else:
        return False
